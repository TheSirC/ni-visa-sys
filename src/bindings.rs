/* automatically generated by rust-bindgen */

pub type ViPUInt64 = *mut ViUInt64;
pub type ViAUInt64 = *mut ViUInt64;
pub type ViPUInt32 = *mut ViUInt32;
pub type ViAUInt32 = *mut ViUInt32;
pub type ViPUInt16 = *mut ViUInt16;
pub type ViAUInt16 = *mut ViUInt16;
pub type ViPInt16 = *mut ViInt16;
pub type ViAInt16 = *mut ViInt16;
pub type ViPUInt8 = *mut ViUInt8;
pub type ViAUInt8 = *mut ViUInt8;
pub type ViChar = ::std::os::raw::c_char;
pub type ViPByte = *mut ViByte;
pub type ViAddr = *mut ::std::os::raw::c_void;
pub type ViPAddr = *mut ViAddr;
pub type ViBuf = ViPByte;
pub type ViConstBuf = *const ViByte;
pub type ViPBuf = ViPByte;
pub type ViConstString = *const ViChar;
pub type ViConstRsrc = ViConstString;
pub type ViBoolean = ViUInt16;
pub type ViStatus = ViInt32;
pub type ViObject = ViUInt32;
pub type ViSession = ViObject;
pub type ViPSession = *mut ViSession;
pub type ViAttr = ViUInt32;
pub type ViEvent = ViObject;
pub type ViPEvent = *mut ViEvent;
pub type ViFindList = ViObject;
pub type ViPFindList = *mut ViFindList;
pub type ViBusAddress = ViUInt32;
pub type ViBusSize = ViUInt32;
pub type ViAttrState = ViUInt32;
pub type ViBusAddress64 = ViUInt64;
pub type ViPBusAddress64 = *mut ViBusAddress64;
pub type ViEventType = ViUInt32;
pub type ViPEventType = *mut ViEventType;
pub type ViConstKeyId = ViConstString;
pub type ViJobId = ViUInt32;
pub type ViPJobId = *mut ViJobId;
pub type ViAccessMode = ViUInt32;
pub type ViPBusAddress = *mut ViBusAddress;
pub type ViEventFilter = ViUInt32;
pub type ViHndlr = ::std::option::Option<
    unsafe extern "C" fn(
        vi: ViSession,
        eventType: ViEventType,
        event: ViEvent,
        userHandle: ViAddr,
    ) -> ViStatus,
>;
extern "C" {
    pub fn viOpenDefaultRM(vi: ViPSession) -> ViStatus;
}
extern "C" {
    pub fn viFindRsrc(
        sesn: ViSession,
        expr: ViConstString,
        vi: ViPFindList,
        retCnt: ViPUInt32,
        desc: *mut ViChar,
    ) -> ViStatus;
}
extern "C" {
    pub fn viFindNext(vi: ViFindList, desc: *mut ViChar) -> ViStatus;
}
extern "C" {
    pub fn viParseRsrc(
        rmSesn: ViSession,
        rsrcName: ViConstRsrc,
        intfType: ViPUInt16,
        intfNum: ViPUInt16,
    ) -> ViStatus;
}
extern "C" {
    pub fn viParseRsrcEx(
        rmSesn: ViSession,
        rsrcName: ViConstRsrc,
        intfType: ViPUInt16,
        intfNum: ViPUInt16,
        rsrcClass: *mut ViChar,
        expandedUnaliasedName: *mut ViChar,
        aliasIfExists: *mut ViChar,
    ) -> ViStatus;
}
extern "C" {
    pub fn viOpen(
        sesn: ViSession,
        name: ViConstRsrc,
        mode: ViAccessMode,
        timeout: ViUInt32,
        vi: ViPSession,
    ) -> ViStatus;
}
extern "C" {
    pub fn viClose(vi: ViObject) -> ViStatus;
}
extern "C" {
    pub fn viSetAttribute(vi: ViObject, attrName: ViAttr, attrValue: ViAttrState) -> ViStatus;
}
extern "C" {
    pub fn viGetAttribute(
        vi: ViObject,
        attrName: ViAttr,
        attrValue: *mut ::std::os::raw::c_void,
    ) -> ViStatus;
}
extern "C" {
    pub fn viStatusDesc(vi: ViObject, status: ViStatus, desc: *mut ViChar) -> ViStatus;
}
extern "C" {
    pub fn viTerminate(vi: ViObject, degree: ViUInt16, jobId: ViJobId) -> ViStatus;
}
extern "C" {
    pub fn viLock(
        vi: ViSession,
        lockType: ViAccessMode,
        timeout: ViUInt32,
        requestedKey: ViConstKeyId,
        accessKey: *mut ViChar,
    ) -> ViStatus;
}
extern "C" {
    pub fn viUnlock(vi: ViSession) -> ViStatus;
}
extern "C" {
    pub fn viEnableEvent(
        vi: ViSession,
        eventType: ViEventType,
        mechanism: ViUInt16,
        context: ViEventFilter,
    ) -> ViStatus;
}
extern "C" {
    pub fn viDisableEvent(vi: ViSession, eventType: ViEventType, mechanism: ViUInt16) -> ViStatus;
}
extern "C" {
    pub fn viDiscardEvents(vi: ViSession, eventType: ViEventType, mechanism: ViUInt16) -> ViStatus;
}
extern "C" {
    pub fn viWaitOnEvent(
        vi: ViSession,
        inEventType: ViEventType,
        timeout: ViUInt32,
        outEventType: ViPEventType,
        outContext: ViPEvent,
    ) -> ViStatus;
}
extern "C" {
    pub fn viInstallHandler(
        vi: ViSession,
        eventType: ViEventType,
        handler: ViHndlr,
        userHandle: ViAddr,
    ) -> ViStatus;
}
extern "C" {
    pub fn viUninstallHandler(
        vi: ViSession,
        eventType: ViEventType,
        handler: ViHndlr,
        userHandle: ViAddr,
    ) -> ViStatus;
}
extern "C" {
    pub fn viRead(vi: ViSession, buf: ViPBuf, cnt: ViUInt32, retCnt: ViPUInt32) -> ViStatus;
}
extern "C" {
    pub fn viReadAsync(vi: ViSession, buf: ViPBuf, cnt: ViUInt32, jobId: ViPJobId) -> ViStatus;
}
extern "C" {
    pub fn viReadToFile(
        vi: ViSession,
        filename: ViConstString,
        cnt: ViUInt32,
        retCnt: ViPUInt32,
    ) -> ViStatus;
}
extern "C" {
    pub fn viWrite(vi: ViSession, buf: ViConstBuf, cnt: ViUInt32, retCnt: ViPUInt32) -> ViStatus;
}
extern "C" {
    pub fn viWriteAsync(vi: ViSession, buf: ViConstBuf, cnt: ViUInt32, jobId: ViPJobId)
        -> ViStatus;
}
extern "C" {
    pub fn viWriteFromFile(
        vi: ViSession,
        filename: ViConstString,
        cnt: ViUInt32,
        retCnt: ViPUInt32,
    ) -> ViStatus;
}
extern "C" {
    pub fn viAssertTrigger(vi: ViSession, protocol: ViUInt16) -> ViStatus;
}
extern "C" {
    pub fn viReadSTB(vi: ViSession, status: ViPUInt16) -> ViStatus;
}
extern "C" {
    pub fn viClear(vi: ViSession) -> ViStatus;
}
extern "C" {
    pub fn viSetBuf(vi: ViSession, mask: ViUInt16, size: ViUInt32) -> ViStatus;
}
extern "C" {
    pub fn viFlush(vi: ViSession, mask: ViUInt16) -> ViStatus;
}
extern "C" {
    pub fn viBufWrite(vi: ViSession, buf: ViConstBuf, cnt: ViUInt32, retCnt: ViPUInt32)
        -> ViStatus;
}
extern "C" {
    pub fn viBufRead(vi: ViSession, buf: ViPBuf, cnt: ViUInt32, retCnt: ViPUInt32) -> ViStatus;
}
extern "C" {
    pub fn viPrintf(vi: ViSession, writeFmt: ViConstString, ...) -> ViStatus;
}
extern "C" {
    pub fn viSPrintf(vi: ViSession, buf: ViBuf, writeFmt: ViConstString, ...) -> ViStatus;
}
extern "C" {
    pub fn viScanf(vi: ViSession, readFmt: ViConstString, ...) -> ViStatus;
}
extern "C" {
    pub fn viSScanf(vi: ViSession, buf: ViConstBuf, readFmt: ViConstString, ...) -> ViStatus;
}
extern "C" {
    pub fn viQueryf(
        vi: ViSession,
        writeFmt: ViConstString,
        readFmt: ViConstString,
        ...
    ) -> ViStatus;
}
extern "C" {
    pub fn viIn8(vi: ViSession, space: ViUInt16, offset: ViBusAddress, val8: ViPUInt8) -> ViStatus;
}
extern "C" {
    pub fn viOut8(vi: ViSession, space: ViUInt16, offset: ViBusAddress, val8: ViUInt8) -> ViStatus;
}
extern "C" {
    pub fn viIn16(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        val16: ViPUInt16,
    ) -> ViStatus;
}
extern "C" {
    pub fn viOut16(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        val16: ViUInt16,
    ) -> ViStatus;
}
extern "C" {
    pub fn viIn32(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        val32: ViPUInt32,
    ) -> ViStatus;
}
extern "C" {
    pub fn viOut32(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        val32: ViUInt32,
    ) -> ViStatus;
}
extern "C" {
    pub fn viIn64(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        val64: ViPUInt64,
    ) -> ViStatus;
}
extern "C" {
    pub fn viOut64(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        val64: ViUInt64,
    ) -> ViStatus;
}
extern "C" {
    pub fn viIn8Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        val8: ViPUInt8,
    ) -> ViStatus;
}
extern "C" {
    pub fn viOut8Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        val8: ViUInt8,
    ) -> ViStatus;
}
extern "C" {
    pub fn viIn16Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        val16: ViPUInt16,
    ) -> ViStatus;
}
extern "C" {
    pub fn viOut16Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        val16: ViUInt16,
    ) -> ViStatus;
}
extern "C" {
    pub fn viIn32Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        val32: ViPUInt32,
    ) -> ViStatus;
}
extern "C" {
    pub fn viOut32Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        val32: ViUInt32,
    ) -> ViStatus;
}
extern "C" {
    pub fn viIn64Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        val64: ViPUInt64,
    ) -> ViStatus;
}
extern "C" {
    pub fn viOut64Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        val64: ViUInt64,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveIn8(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        length: ViBusSize,
        buf8: ViAUInt8,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveOut8(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        length: ViBusSize,
        buf8: ViAUInt8,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveIn16(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        length: ViBusSize,
        buf16: ViAUInt16,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveOut16(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        length: ViBusSize,
        buf16: ViAUInt16,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveIn32(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        length: ViBusSize,
        buf32: ViAUInt32,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveOut32(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        length: ViBusSize,
        buf32: ViAUInt32,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveIn64(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        length: ViBusSize,
        buf64: ViAUInt64,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveOut64(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress,
        length: ViBusSize,
        buf64: ViAUInt64,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveIn8Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        length: ViBusSize,
        buf8: ViAUInt8,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveOut8Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        length: ViBusSize,
        buf8: ViAUInt8,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveIn16Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        length: ViBusSize,
        buf16: ViAUInt16,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveOut16Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        length: ViBusSize,
        buf16: ViAUInt16,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveIn32Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        length: ViBusSize,
        buf32: ViAUInt32,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveOut32Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        length: ViBusSize,
        buf32: ViAUInt32,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveIn64Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        length: ViBusSize,
        buf64: ViAUInt64,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveOut64Ex(
        vi: ViSession,
        space: ViUInt16,
        offset: ViBusAddress64,
        length: ViBusSize,
        buf64: ViAUInt64,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMove(
        vi: ViSession,
        srcSpace: ViUInt16,
        srcOffset: ViBusAddress,
        srcWidth: ViUInt16,
        destSpace: ViUInt16,
        destOffset: ViBusAddress,
        destWidth: ViUInt16,
        srcLength: ViBusSize,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveAsync(
        vi: ViSession,
        srcSpace: ViUInt16,
        srcOffset: ViBusAddress,
        srcWidth: ViUInt16,
        destSpace: ViUInt16,
        destOffset: ViBusAddress,
        destWidth: ViUInt16,
        srcLength: ViBusSize,
        jobId: ViPJobId,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveEx(
        vi: ViSession,
        srcSpace: ViUInt16,
        srcOffset: ViBusAddress64,
        srcWidth: ViUInt16,
        destSpace: ViUInt16,
        destOffset: ViBusAddress64,
        destWidth: ViUInt16,
        srcLength: ViBusSize,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMoveAsyncEx(
        vi: ViSession,
        srcSpace: ViUInt16,
        srcOffset: ViBusAddress64,
        srcWidth: ViUInt16,
        destSpace: ViUInt16,
        destOffset: ViBusAddress64,
        destWidth: ViUInt16,
        srcLength: ViBusSize,
        jobId: ViPJobId,
    ) -> ViStatus;
}
extern "C" {
    pub fn viMapAddress(
        vi: ViSession,
        mapSpace: ViUInt16,
        mapOffset: ViBusAddress,
        mapSize: ViBusSize,
        access: ViBoolean,
        suggested: ViAddr,
        address: ViPAddr,
    ) -> ViStatus;
}
extern "C" {
    pub fn viUnmapAddress(vi: ViSession) -> ViStatus;
}
extern "C" {
    pub fn viMapAddressEx(
        vi: ViSession,
        mapSpace: ViUInt16,
        mapOffset: ViBusAddress64,
        mapSize: ViBusSize,
        access: ViBoolean,
        suggested: ViAddr,
        address: ViPAddr,
    ) -> ViStatus;
}
extern "C" {
    pub fn viPeek8(vi: ViSession, address: ViAddr, val8: ViPUInt8);
}
extern "C" {
    pub fn viPoke8(vi: ViSession, address: ViAddr, val8: ViUInt8);
}
extern "C" {
    pub fn viPeek16(vi: ViSession, address: ViAddr, val16: ViPUInt16);
}
extern "C" {
    pub fn viPoke16(vi: ViSession, address: ViAddr, val16: ViUInt16);
}
extern "C" {
    pub fn viPeek32(vi: ViSession, address: ViAddr, val32: ViPUInt32);
}
extern "C" {
    pub fn viPoke32(vi: ViSession, address: ViAddr, val32: ViUInt32);
}
extern "C" {
    pub fn viPeek64(vi: ViSession, address: ViAddr, val64: ViPUInt64);
}
extern "C" {
    pub fn viPoke64(vi: ViSession, address: ViAddr, val64: ViUInt64);
}
extern "C" {
    pub fn viMemAlloc(vi: ViSession, size: ViBusSize, offset: ViPBusAddress) -> ViStatus;
}
extern "C" {
    pub fn viMemFree(vi: ViSession, offset: ViBusAddress) -> ViStatus;
}
extern "C" {
    pub fn viMemAllocEx(vi: ViSession, size: ViBusSize, offset: ViPBusAddress64) -> ViStatus;
}
extern "C" {
    pub fn viMemFreeEx(vi: ViSession, offset: ViBusAddress64) -> ViStatus;
}
extern "C" {
    pub fn viGpibControlREN(vi: ViSession, mode: ViUInt16) -> ViStatus;
}
extern "C" {
    pub fn viGpibControlATN(vi: ViSession, mode: ViUInt16) -> ViStatus;
}
extern "C" {
    pub fn viGpibSendIFC(vi: ViSession) -> ViStatus;
}
extern "C" {
    pub fn viGpibCommand(
        vi: ViSession,
        cmd: ViConstBuf,
        cnt: ViUInt32,
        retCnt: ViPUInt32,
    ) -> ViStatus;
}
extern "C" {
    pub fn viGpibPassControl(vi: ViSession, primAddr: ViUInt16, secAddr: ViUInt16) -> ViStatus;
}
extern "C" {
    pub fn viVxiCommandQuery(
        vi: ViSession,
        mode: ViUInt16,
        cmd: ViUInt32,
        response: ViPUInt32,
    ) -> ViStatus;
}
extern "C" {
    pub fn viAssertUtilSignal(vi: ViSession, line: ViUInt16) -> ViStatus;
}
extern "C" {
    pub fn viAssertIntrSignal(vi: ViSession, mode: ViInt16, statusID: ViUInt32) -> ViStatus;
}
extern "C" {
    pub fn viMapTrigger(
        vi: ViSession,
        trigSrc: ViInt16,
        trigDest: ViInt16,
        mode: ViUInt16,
    ) -> ViStatus;
}
extern "C" {
    pub fn viUnmapTrigger(vi: ViSession, trigSrc: ViInt16, trigDest: ViInt16) -> ViStatus;
}
extern "C" {
    pub fn viUsbControlOut(
        vi: ViSession,
        bmRequestType: ViInt16,
        bRequest: ViInt16,
        wValue: ViUInt16,
        wIndex: ViUInt16,
        wLength: ViUInt16,
        buf: ViConstBuf,
    ) -> ViStatus;
}
extern "C" {
    pub fn viUsbControlIn(
        vi: ViSession,
        bmRequestType: ViInt16,
        bRequest: ViInt16,
        wValue: ViUInt16,
        wIndex: ViUInt16,
        wLength: ViUInt16,
        buf: ViPBuf,
        retCnt: ViPUInt16,
    ) -> ViStatus;
}
extern "C" {
    pub fn viPxiReserveTriggers(
        vi: ViSession,
        cnt: ViInt16,
        trigBuses: ViAInt16,
        trigLines: ViAInt16,
        failureIndex: ViPInt16,
    ) -> ViStatus;
}
extern "C" {
    pub fn viVxiServantResponse(vi: ViSession, mode: ViInt16, resp: ViUInt32) -> ViStatus;
}
